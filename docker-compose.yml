version: "3.7"

services:
  db:
    image: postgres:10.1
    container_name: app_postgres
    restart: always
    tty: true
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST: ${DB_HOST}
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - database_postgres:/var/lib/postgresql/data
    networks:
      - app-network

  elasticsearch:
    image: elasticsearch:8.2.2
    container_name: app_elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - app-network

  kibana:
    image: kibana:8.2.2
    container_name: app_kibana
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      - app-network

  golang_application:
    container_name:  app_container
    build:
      context: ./
      dockerfile: dockerfiles/app.Dockerfile
    ports:
      - "${APP_PORT}:${APP_PORT}"
    restart: on-failure
    depends_on:
      - db
      - elasticsearch
      - kibana
    volumes:
      - .:/app/
    networks:
      - app-network

  phppgadmin:
    container_name: app_phppgadmin
    image: dockage/phppgadmin:latest
    environment:
      - PHP_PG_ADMIN_SERVER_HOST=db
      - PHP_PG_ADMIN_SERVER_PORT=5432
      - PHP_PG_ADMIN_SERVER_DEFAULT_DB=postgres
    restart: unless-stopped
    ports:
      - "8087:80"
    depends_on:
      - db
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  database_postgres:
    driver: local
  elasticsearch-data:
    driver: local